What happens when you initialize a repository? Why do you need to do it?
	We  create a new repository directory without any commits.
	
How is the staging area different from the working directory and the repository?
What value do you think it offers?
	In the staging area we prepare the commit that will bea added to the repository.
	It makes it easier to manage the commits.

How can you use the staging area to make sure you have one commit per logical
change?
	In the staging area we structure the commit,adding all the files that represent one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches can be useful when trying experimental features or features that derive from the original project.Branches help keeping track of these features by having them labeled and separated from the main project,from the master branch.

How do the diagrams help you visualize the branch structure?
	Diagrams make it far easier to manage the branches and to make sure you are not making change that would ruin the entire project

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	We combine the latest commit from one branch with the latest commit from the other,deleting and adding the lines by comparing the original with the two latest commits from the branches.
	The diagram representation accurately shows that the new merged commit has two parents  and makes it easier to navigate throught the commits.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	Pro's: better reliability,minimizes the posibility for incorrect merging 
	Con's:opens the posibility for human error,it can be annoying at times 
